#!/bin/bash
#
# accords	This shell script takes care of starting and stopping
#		accords (CompatibleOne).
#
# chkconfig: - 58 74
# description: accords is CompatibleOne.

### BEGIN INIT INFO
# Provides: accords
# Required-Start: $network $local_fs $remote_fs
# Required-Stop: $network $local_fs $remote_fs
# Should-Start: $syslog $named ntpdate
# Should-Stop: $syslog $named
# Short-Description: start and stop accords
# Description: accords is CompatibleOne
### END INIT INFO

# Source function library.
. /etc/init.d/functions

# Check accords.xml
target=/etc/accords/accords.xml
[ ! -f $target ] && echo "No $target, please run accords-config" && exit 1

# Source accords config
[ -f /etc/accords/accords.ini ] && . /etc/accords/accords.ini

prog=accords
lockfile=/var/lock/subsys/$prog

daemons="publisher fileserver coss comons coobas conets coes coees ezvm coips parser broker procci cosched osprocci testosocci osocciprocci onprocci azprocci dcprocci slam cosacs"

start_daemon() {
	name=$1
	server=$2
	[ -x /usr/bin/$name ] || return 1
	daemon "/usr/bin/$name --config $target $server &"
	sleep 1
	RETVAL=$?
	return $RETVAL
}

stop_daemon() {
	name=$1
	killproc $name
	RETVAL=$?
	return $RETVAL
}

_run_azprocci() {
    start_daemon azprocci CO-AZPROCCI/1.0
} 

_run_broker() {
    start_daemon broker CO-BROKER/1.0
} 

_run_coes() {
    start_daemon coes CO-ES/1.0
} 

_run_coees() {
    start_daemon coees CO-EES/1.0
} 

_run_comons() {
    start_daemon comons CO-MONS/1.0
}

_run_conets() {
    start_daemon conets CO-NETS/1.0
}

_run_coobas() {
    start_daemon coobas CO-BAS/1.0
}

_run_cosacs() {
    start_daemon cosacs CO-SACS/1.0
}

_run_coss() {
    start_daemon coss CO-SS/1.0
}

_run_ezvm() {
    start_daemon ezvm CO-EZVM/1.0
}

_run_coips() {
    start_daemon coips CO-IPS/1.0
}

_run_fileserver() {
    start_daemon fileserver CO-FS/1.0
}

_run_onprocci() {
    start_daemon onprocci CO-ONPROCCI/1.0
}

_run_osprocci() {
    start_daemon osprocci CO-OSPROCCI/1.0
}

_run_osocciprocci() {
    start_daemon osocciprocci CO-OSOCCIPROCCI/1.0
}

_run_testosocci() {
    start_daemon testosocci CO-TESTOSOCCI/1.0
}

_run_slam() {
    start_daemon slam CO-SLAM/1.0
}

_run_dcprocci() {
    start_daemon dcprocci CO-DCPROCCI/1.0
}

_run_parser() {
    start_daemon parser CO-PARSER/1.0
}

_run_procci() {
    start_daemon procci CO-PROCCI/1.0
}

_run_cosched() {
    start_daemon cosched CO-SCHED/1.0
}
 
_run_publisher() {
    start_daemon publisher CO-PUB/1.0
}

_run_fileserver() {
    start_daemon fileserver CO-FS/1.0
}

start() {
	[ "$EUID" != "0" ] && exit 4
	[ "$NETWORKING" = "no" ] && exit 1
	RETVAL=0

        # Start daemons.
        echo -n $"Starting $prog: "
	echo
	for d in $daemons; do
		echo -n "	$d "
		_run_$d
		RETVAL=$?
		echo 
		[ $RETVAL -ne 0 ] && echo "Error while starting $d" && exit 1
	done;

	[ $RETVAL -eq 0 ] && touch $lockfile
	return $RETVAL
}

stop() {
	[ "$EUID" != "0" ] && exit 4
	RETVAL=0

        echo -n $"Shutting down $prog: "
	echo
	for d in $daemons; do
		echo -n "	$d "
		stop_daemon $d
		echo 
	done;

	[ $RETVAL -eq 0 ] && rm -f $lockfile
	return $RETVAL
}

# See how we were called.
case "$1" in
  start)
	start
	;;
  stop)
	stop
	;;
  status)
	status $prog
	;;
  restart|force-reload)
	stop
	start
	;;
  try-restart|condrestart)
	if status $prog > /dev/null; then
	    stop
	    start
	fi
	;;
  reload)
	exit 3
	;;
  *)
	echo $"Usage: $0 {start|stop|status|restart|try-restart|force-reload}"
	exit 2
esac
